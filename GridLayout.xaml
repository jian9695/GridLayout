<UserControl x:Class="GridLayoutApp.GridLayout"
             x:Name="GridLayoutCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GridLayoutApp"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <ResourceDictionary>
      <local:BooleanToVisibilityConverter 
        x:Key="BoolToVisibilityConverter" 
        True="Visible" 
        False="Collapsed"/>
      <local:BooleanToVisibilityConverter 
        x:Key="InverseBoolToVisibilityConverter" 
       True ="Collapsed" 
       False ="Visible"/>
      <local:MultiBooleanToVisibilityConverter x:Key="MultiBoolToVisibilityConverter"/>
      <local:InverseBooleanConverter x:Key="InverseBoolConverter"/>
      <local:PercentageToSizeConverter x:Key="PercentageToSizeConverter"/>
      <local:PercentageToPositionConverter x:Key="PercentageToPositionConverter"/>
      <local:MarginConverter x:Key="MarginConverter"/>
      
      <SolidColorBrush x:Key="Esri_Blue3" Color="#80bce0" />
      <SolidColorBrush x:Key="Esri_Blue1" Color="#e2f1fb" />
      <SolidColorBrush x:Key="Esri_Blue7" Color="#90cdf2" />
      <SolidColorBrush x:Key="Esri_BlueDark" Color="#005e95" />

      <ContextMenu x:Key="GridContextMenu">
        <MenuItem Header="Clear" Command="{Binding Path=DataContext.ClearCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Merge" Command="{Binding Path=DataContext.MergeCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Set Image" Command="{Binding Path=DataContext.SetImageCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Set Background" Command="{Binding Path=DataContext.SetBackgroundCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Split Horizontally" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="2"/>
        <MenuItem Header="Split Vertically" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="2"/>
        <MenuItem Header="Divide Horizontally">
          <MenuItem Header="Into 3 Parts" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="3"/>
          <MenuItem Header="Into 4 Parts" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="4"/>
          <MenuItem Header="Into 5 Parts" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="5"/>
          <MenuItem Header="Into 6 Parts" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="6"/>
          <MenuItem Header="Into 7 Parts" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="7"/>
          <MenuItem Header="Into 8 Parts" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="8"/>
          <MenuItem Header="Into 9 Parts" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="9"/>
          <MenuItem Header="Into 10 Parts" Command="{Binding Path=DataContext.SplitHorizontallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="10"/>
        </MenuItem>
        <MenuItem Header="Divide Vertically">
          <MenuItem Header="Into 3 Parts" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="3"/>
          <MenuItem Header="Into 4 Parts" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="4"/>
          <MenuItem Header="Into 5 Parts" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="5"/>
          <MenuItem Header="Into 6 Parts" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="6"/>
          <MenuItem Header="Into 7 Parts" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="7"/>
          <MenuItem Header="Into 8 Parts" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="8"/>
          <MenuItem Header="Into 9 Parts" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="9"/>
          <MenuItem Header="Into 10 Parts" Command="{Binding Path=DataContext.SplitVerticallyCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="10"/>
        </MenuItem>
      </ContextMenu>
      
      <Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="Transparent"/>
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="AliceBlue"/>
          </Trigger>
        </Style.Triggers>
      </Style>
      
      <Style x:Key="GridCellStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="ContextMenu" Value="{StaticResource GridContextMenu}"/>
        <Setter Property="Visibility" Value="{Binding IsOn, Converter={StaticResource BoolToVisibilityConverter}}"/>
        <Setter Property="Width">
          <Setter.Value>
            <MultiBinding Converter="{StaticResource PercentageToSizeConverter}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" Path="ActualWidth"/>
              <Binding Path="Extent.Width" Mode="OneWay"/>
              <Binding/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter Property="Height">
          <Setter.Value>
            <MultiBinding Converter="{StaticResource PercentageToSizeConverter}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" Path="ActualHeight"/>
              <Binding Path="Extent.Height" Mode="OneWay"/>
              <Binding/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Border x:Name="_Border" Background="{Binding Border.Background}" Margin="{Binding Margin}"
                            BorderBrush="{Binding Border.BorderBrush}"
                            BorderThickness="{Binding Border.BorderThickness}">
                <Grid>
                  <Rectangle x:Name="_Overlay" Opacity="0"/>
                  <Image x:Name="_Image" Source="{Binding Image.Source}" Stretch="{Binding Image.Stretch}"  StretchDirection ="{Binding Image.StretchDirection}"
                         Visibility="{Binding DisplayContent, Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                  <TextBlock x:Name="_TextBlock" Text ="{Binding TextBlock.Text}" Foreground="{Binding TextBlock.Foreground}" 
                             VerticalAlignment="{Binding TextBlock.VerticalAlignment}" HorizontalAlignment="{Binding TextBlock.HorizontalAlignment}"
                             FontSize="{Binding TextBlock.FontSize}" FontFamily="{Binding TextBlock.FontFamily}" 
                             FontStretch="{Binding TextBlock.FontStretch}" FontStyle="{Binding TextBlock.FontStyle}" FontWeight="{Binding TextBlock.FontWeight}"
                             TextWrapping="{Binding TextBlock.TextWrapping}" TextTrimming="{Binding TextBlock.TextTrimming}" TextEffects="{Binding TextBlock.TextEffects}" TextDecorations="{Binding TextBlock.TextDecorations}" TextAlignment="{Binding TextBlock.TextAlignment}"
                             Padding="{Binding TextBlock.Padding}" LineStackingStrategy="{Binding TextBlock.LineStackingStrategy}" LineHeight="{Binding TextBlock.LineHeight}"
                             IsHyphenationEnabled="{Binding TextBlock.IsHyphenationEnabled}" BaselineOffset="{Binding TextBlock.BaselineOffset}"                          
                             Visibility="{Binding DisplayContent, Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                  <TextBox x:Name="_TextBox" Text ="{Binding TextBlock.Text}" Foreground="{Binding TextBlock.Foreground}" 
                             VerticalAlignment="{Binding TextBlock.VerticalAlignment}" HorizontalAlignment="{Binding TextBlock.HorizontalAlignment}"
                             FontSize="{Binding TextBlock.FontSize}" FontFamily="{Binding TextBlock.FontFamily}" 
                             FontStretch="{Binding TextBlock.FontStretch}" FontStyle="{Binding TextBlock.FontStyle}" FontWeight="{Binding TextBlock.FontWeight}"
                             TextWrapping="{Binding TextBlock.TextWrapping}" TextDecorations="{Binding TextBlock.TextDecorations}" TextAlignment="{Binding TextBlock.TextAlignment}"
                             Padding="{Binding TextBlock.Padding}" Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding IsHighlightOverlay}" Value="True">
                  <Setter TargetName="_Overlay" Property="Fill" Value="{StaticResource Esri_Blue1}"/>
                  <Setter TargetName="_Overlay" Property="Opacity" Value="0.5"/>
                  <Setter TargetName="_Border" Property="BorderBrush" Value="{StaticResource Esri_Blue3}"/>
                  <Setter TargetName="_Border" Property="BorderThickness" Value="3"/>
                  <Setter TargetName="_Border" Property="Background" Value="Transparent"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsHighlighted}" Value="True">
                  <Setter TargetName="_Overlay" Property="Fill" Value="{StaticResource Esri_Blue1}"/>
                  <Setter TargetName="_Overlay" Property="Opacity" Value="0.5"/>
                  <Setter TargetName="_Border" Property="BorderBrush" Value="{StaticResource Esri_Blue3}"/>
                  <Setter TargetName="_Border" Property="BorderThickness" Value="3"/>
                  <Setter TargetName="_Border" Property="Effect">
                    <Setter.Value>
                      <DropShadowEffect ShadowDepth="0" Color="Black" Opacity="1" BlurRadius="20" />
                    </Setter.Value>
                  </Setter>
                </DataTrigger>
                <Trigger Property="IsMouseOver" Value="True">
                  <Setter TargetName="_Border" Property="Effect">
                    <Setter.Value>
                      <DropShadowEffect ShadowDepth="0" Color="Black" Opacity="1" BlurRadius="20" />
                    </Setter.Value>
                  </Setter>
                  <Setter TargetName="_Overlay" Property="Fill" Value="{StaticResource Esri_Blue1}"/>
                  <Setter TargetName="_Overlay" Property="Opacity" Value="0.5"/>
                  <Setter TargetName="_Border" Property="BorderBrush" Value="{StaticResource Esri_Blue3}"/>
                  <Setter TargetName="_Border" Property="BorderThickness" Value="5"/>
                  <Setter TargetName="_Border" Property="Background" Value="Transparent"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="CanvasContainerStyle">
        <Setter Property="Canvas.Top">
          <Setter.Value>
            <MultiBinding Converter="{StaticResource PercentageToSizeConverter}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" Path="ActualHeight"/>
              <Binding Path="Extent.Top" Mode="OneWay"/>
              <Binding/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter Property="Canvas.Left">
          <Setter.Value>
            <MultiBinding Converter="{StaticResource PercentageToSizeConverter}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" Path="ActualWidth"/>
              <Binding Path="Extent.Left" Mode="OneWay"/>
              <Binding/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
      </Style>
      
      <Style x:Key="GraticuleStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width">
          <Setter.Value>
            <MultiBinding Converter="{StaticResource PercentageToSizeConverter}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" Path="ActualWidth"/>
              <Binding Path="Extent.Width" Mode="OneWay"/>
              <Binding/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter Property="Height">
          <Setter.Value>
            <MultiBinding Converter="{StaticResource PercentageToSizeConverter}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}" Path="ActualHeight"/>
              <Binding Path="Extent.Height" Mode="OneWay"/>
              <Binding/>
            </MultiBinding>
          </Setter.Value>
        </Setter>
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Rectangle x:Name="_Border" Margin="{Binding Margin}" Stroke="Black" StrokeThickness="1" StrokeDashArray="4 4">
              </Rectangle>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </ResourceDictionary>
  </UserControl.Resources>

  <Grid>
    <ItemsControl ItemsSource="{Binding GridElements}" ItemContainerStyle="{StaticResource CanvasContainerStyle}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <Canvas x:Name="MainCanvas"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Button Style="{StaticResource GridCellStyle}" 
                  PreviewMouseLeftButtonDown="Button_PreviewMouseLeftButtonDown" 
                  PreviewMouseRightButtonDown="Button_PreviewMouseRightButtonDown"
                  MouseDoubleClick="Button_MouseDoubleClick" 
                  KeyUp="Button_KeyUp"/>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
    <ItemsControl ItemsSource="{Binding Graticule}" ItemContainerStyle="{StaticResource CanvasContainerStyle}">
      <ItemsControl.ItemsPanel>
        <ItemsPanelTemplate>
          <Canvas x:Name="MainCanvas"/>
        </ItemsPanelTemplate>
      </ItemsControl.ItemsPanel>
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <Button Style="{StaticResource GraticuleStyle}"/>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
  </Grid>

</UserControl>
